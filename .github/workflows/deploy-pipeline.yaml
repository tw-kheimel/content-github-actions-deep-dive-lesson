name: Deploy Lambda Function
on: [push]

env:
 S3_BUCKET_NAME: 234sdfsdfa3

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
          retention-days: 1
  
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: zipped-bundle
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://$S3_BUCKET_NAME /
  
  test:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Create test function
        run: |
          aws lambda create-function --function-name test-function \
          --code S3Bucket=234sdfsdfa3,S3Key=${{ github.sha }}.zip \
          --handler lambda_function.lambda_handler --runtime python3.8 \
          --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/lambda-test
      - name: Wait 30 seconds
        run: sleep 60
      - name: Destroy Test function
        if: ${{ always() }}
        run: |
          aws lambda delete-function --function-name test-function
      
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update functions code
        run: |
         aws lambda update-function-code \
         --function-name my-function \
         --s3-bucket $S3_BUCKET_NAME \
         --s3-key ${{ github.sha }}.zip \
         --publish

        
#   publish:
#     runs-on: ubuntu-latest
#     needs: build
#     permissions:
#       deployments: write
#     steps:
#       - name: Download Artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: zipped-bundle
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.run_number }}
#           release_name: Release from ${{ github.run_number }}
#           body: |
#             New Release for ${{ github.ref }} and ${{ github.sha }} in this Release:
#             - First change
#             - Something
#           draft: false
#           prerelease: false
#       - name: Upload release asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.github_token }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./${{ github.sha }}.zip
#           asset_name: source_code_with_libraries.zip
#           asset_content_type: application/zip
          
          
